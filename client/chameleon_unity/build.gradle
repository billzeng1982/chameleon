apply plugin: 'android-library'
android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 16
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

//定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
def makeJar(String target,String classDir){
    exec{
        executable "jar"   //调用jar
        args "cvf",target
        args "-C", classDir
        args "","."
    }
}

def updateJar(String target,String classDir){
    exec{
        executable "jar"   //调用jar
        args "uf",target
        args "-C", classDir
        args "","."
    }
}

task buildjar(dependsOn:['build'])<<{
    makeJar("../chameleon_build/lib/chameleon_unity.jar","build/intermediates/classes/release")
    updateJar("../chameleon_build/lib/chameleon_unity.jar","../chameleon/build/intermediates/classes/release")
}


android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    print "jar${name.capitalize()}"
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives', task);
}

dependencies {
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile project(':chameleon')
    compile fileTree(dir: "libs", includes: ["*.jar"])
}

